webpackJsonp([1],{

/***/ 94:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(13);

	var _reactRouterRedux = __webpack_require__(81);

	var _auth = __webpack_require__(93);

	var _login = __webpack_require__(86);

	var _index = __webpack_require__(83);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Page - index
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 首页
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


	//加载action


	//加载reducer


	//封装组件

	var Dashboard = function (_Component) {
	    _inherits(Dashboard, _Component);

	    function Dashboard() {
	        _classCallCheck(this, Dashboard);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Dashboard).apply(this, arguments));
	    }

	    _createClass(Dashboard, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _props = this.props;
	            var login = _props.login;
	            var dispatch = _props.dispatch;
	            var routing = _props.routing;
	            //检测是否未登录

	            dispatch((0, _auth.authLoginStatus)(login.status, true));
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props2 = this.props;
	            var login = _props2.login;
	            var dispatch = _props2.dispatch;

	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'p',
	                    null,
	                    ' 欢迎光临控制面板,当前登录用户',
	                    login.info.name,
	                    ',当前登录角色',
	                    login.info.role
	                ),
	                _react2.default.createElement(
	                    'p',
	                    null,
	                    _react2.default.createElement(
	                        'a',
	                        { href: '#', onClick: function onClick(e) {
	                                e.preventDefault();dispatch((0, _login.logoutPost)());
	                            } },
	                        '退出'
	                    )
	                )
	            );
	        }
	    }]);

	    return Dashboard;
	}(_react.Component);

	exports.default = (0, _reactRedux.connect)(_index.propMap)(Dashboard);

/***/ }

});